#server.port = 8081
#spring.datasource.url = jdbc:mariadb://localhost:3306/member
#spring.datasource.username = root
#spring.datasource.password = 1234

#server:
#  port: 8081

# 필요한 이유: jdbc는 모든 스프링 기술의 근간이다.
spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/basic
    username: root
    password: 1234
  jpa:
    database: mysql
    # innoDB 엔진 사용 설정
    database-platform: org.hibernate.dialect.MariaDBDialect
    # 테이블 및 컬럼 자동 생성 (단, 스키마는 사전 생성 필요. JPA가 엔티티를 기준으로 테이블을 생성함)
    generate-ddl: true
    # hibernate: JPA의 구현체
    hibernate:
      # create 옵션은 서버를 재부팅할 때마다 table을 매번 drop 후 생성한다.
      # update 옵션은 변경사항만 Alter 적용 (Drop 안시킴)
      # validate는 실제 DB와의 차이만을 Check
      # 실무에서는 update 또는 validate 사용
      ddl-auto: create
    # jpa가 자동으로 쿼리를 생성할 때, 쿼리가 console 창에 보여짐
    show_sql: true

#spring:
#  profiles:
#    active: dev
#  datasource:
#    url: jdbc:mariadb://localhost:3306/member
#    username: root
#    password: 1234
#
#---
#
#server:
#  port: 8081
#
#spring:
#  profiles:
#    active: prod
#  datasource:
#    url: jdbc:mariadb://localhost:3306/member
#    username: root
#    password: 1234